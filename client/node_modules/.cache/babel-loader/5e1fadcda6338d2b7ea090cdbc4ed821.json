{"ast":null,"code":"const register = async function () {\n  let {\n    username,\n    email,\n    password\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const user = {\n    username,\n    email,\n    password\n  };\n\n  try {\n    const res = await fetch('${process.env.REACT_APP_API_URL}/register', {\n      method: \"POST\",\n      headers: {\n        Accept: 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await res.json();\n  } catch (error) {\n    throw new Error('Cannot register this time.$(err)');\n  }\n};\n\nconst login = async function () {\n  let {\n    email,\n    password\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const user = {\n    email,\n    password\n  };\n\n  try {\n    const res = await fetch('${process.env.REACT_APP_API_URL}/login', {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await res.json();\n  } catch (error) {\n    throw new Error('Cannot login this time.$(err)');\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await fetch('${process.env.REACT_APP_API_URL}/logout', {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    return await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUser = async () => {\n  try {\n    const res = await fetch('${process.env.REACT_APP_API_URL}/user', {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    return await res.json();\n  } catch (err) {\n    throw new Error(\"Please login to continue\");\n  }\n};","map":{"version":3,"sources":["C:/Users/R I B/Desktop/Marn-stack/client/src/api/user.js"],"names":["register","username","email","password","user","res","fetch","method","headers","Accept","body","JSON","stringify","json","error","Error","login","credentials","logout","err","console","log","getUser"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kBAA8C;AAAA,MAAvC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAuC,uEAAP,EAAO;AAC7D,QAAMC,IAAI,GAAG;AAACH,IAAAA,QAAD;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAb;;AACA,MAAI;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA8C;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB;AAFX,OAFwD;AAMjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAN2D,KAA9C,CAAvB;AAQA,WAAO,MAAMC,GAAG,CAACQ,IAAJ,EAAb;AACH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACH;AACF,CAfD;;AAiBA,MAAMC,KAAK,GAAG,kBAAqC;AAAA,MAA9B;AAAGd,IAAAA,KAAH;AAAUC,IAAAA;AAAV,GAA8B,uEAAP,EAAO;AAC/C,QAAMC,IAAI,GAAG;AAAEF,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAb;;AACA,MAAI;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AAC9DC,MAAAA,MAAM,EAAE,MADsD;AAE9DU,MAAAA,WAAW,EAAE,SAFiD;AAG9DT,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB;AAFX,OAHqD;AAO9DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAPwD,KAA3C,CAAvB;AASA,WAAO,MAAMC,GAAG,CAACQ,IAAJ,EAAb;AACH,GAXD,CAWE,OAAOC,KAAP,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH;AACF,CAhBH;;AAiBE,OAAO,MAAMG,MAAM,GAAG,YAAY;AAC9B,MAAI;AACF,UAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AAC/DC,MAAAA,MAAM,EAAE,KADuD;AAE/DU,MAAAA,WAAW,EAAE;AAFkD,KAA5C,CAAvB;AAIA,WAAO,MAAMZ,GAAG,CAACQ,IAAJ,EAAb;AACD,GAND,CAME,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAVM;AAWP,OAAO,MAAMG,OAAO,GAAG,YAAY;AACjC,MAAI;AACF,UAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAC7DC,MAAAA,MAAM,EAAE,KADqD;AAE7DU,MAAAA,WAAW,EAAE;AAFgD,KAA1C,CAAvB;AAIA,WAAO,MAAMZ,GAAG,CAACQ,IAAJ,EAAb;AACD,GAND,CAME,OAAOM,GAAP,EAAY;AACV,UAAM,IAAIJ,KAAJ,CAAU,0BAAV,CAAN;AACH;AACJ,CAVQ","sourcesContent":["const register = async ({ username, email, password } = {}) => {\r\n  const user = {username, email, password};\r\n  try {\r\n      const res = await fetch('${process.env.REACT_APP_API_URL}/register', {\r\n          method: \"POST\",\r\n          headers: {\r\n              Accept: 'application/json',\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(user),\r\n      });\r\n      return await res.json();\r\n  } catch (error) {\r\n      throw new Error('Cannot register this time.$(err)');\r\n  }\r\n};\r\n\r\nconst login = async ({  email, password } = {}) => {\r\n    const user = { email, password};\r\n    try {\r\n        const res = await fetch('${process.env.REACT_APP_API_URL}/login', {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                Accept: 'application/json',\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(user),\r\n        });\r\n        return await res.json();\r\n    } catch (error) {\r\n        throw new Error('Cannot login this time.$(err)');\r\n    }\r\n  };\r\n  export const logout = async () => {\r\n      try {\r\n        const res = await fetch('${process.env.REACT_APP_API_URL}/logout', {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n        });\r\n        return await res.json();\r\n      } catch (err) {\r\n          console.log(err);\r\n      }\r\n  };\r\n  export const getUser = async () => {\r\n    try {\r\n      const res = await fetch('${process.env.REACT_APP_API_URL}/user', {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n      });\r\n      return await res.json();\r\n    } catch (err) {\r\n        throw new Error(\"Please login to continue\");\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}