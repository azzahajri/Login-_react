{"ast":null,"code":"export const register = async function () {\n  let {\n    username,\n    email,\n    password\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const user = {\n    username,\n    email,\n    password\n  };\n\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await res.json();\n  } catch (err) {\n    throw new Error(`Cannot register at this time. ${err}`);\n  }\n};\nexport const login = async function () {\n  let {\n    email,\n    password\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const user = {\n    email,\n    password\n  };\n\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await res.json();\n  } catch (err) {\n    throw new Error(`Cannot login at this time. ${err}`);\n  }\n};\nexport const logout = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/logout`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    return await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUser = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/user`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    return await res.json();\n  } catch (err) {\n    throw new Error(\"Please login to continue\");\n  }\n};","map":{"version":3,"sources":["C:/Users/azzah/Desktop/Marn-stack/client/src/api/user.js"],"names":["register","username","email","password","user","res","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","body","JSON","stringify","json","err","Error","login","credentials","logout","console","log","getUser"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,kBAA8C;AAAA,MAAvC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAuC,uEAAP,EAAO;AACrE,QAAMC,IAAI,GAAG;AAAEH,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAb;;AAEA,MAAI;AACH,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAAlC,EAA8C;AACpEC,MAAAA,MAAM,EAAE,MAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACRC,QAAAA,MAAM,EAAE,kBADA;AAER,wBAAgB;AAFR,OAF2D;AAMpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAN8D,KAA9C,CAAvB;AASA,WAAO,MAAMC,GAAG,CAACW,IAAJ,EAAb;AACA,GAXD,CAWE,OAAOC,GAAP,EAAY;AACb,UAAM,IAAIC,KAAJ,CAAW,iCAAgCD,GAAI,EAA/C,CAAN;AACA;AACD,CAjBM;AAmBP,OAAO,MAAME,KAAK,GAAG,kBAAoC;AAAA,MAA7B;AAAEjB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA6B,uEAAP,EAAO;AACxD,QAAMC,IAAI,GAAG;AAAEF,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAb;;AAEA,MAAI;AACH,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QAAlC,EAA2C;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEU,MAAAA,WAAW,EAAE,SAFoD;AAGjET,MAAAA,OAAO,EAAE;AACRC,QAAAA,MAAM,EAAE,kBADA;AAER,wBAAgB;AAFR,OAHwD;AAOjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAP2D,KAA3C,CAAvB;AAUA,WAAO,MAAMC,GAAG,CAACW,IAAJ,EAAb;AACA,GAZD,CAYE,OAAOC,GAAP,EAAY;AACb,UAAM,IAAIC,KAAJ,CAAW,8BAA6BD,GAAI,EAA5C,CAAN;AACA;AACD,CAlBM;AAoBP,OAAO,MAAMI,MAAM,GAAG,YAAY;AACjC,MAAI;AACH,UAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SAAlC,EAA4C;AAClEC,MAAAA,MAAM,EAAE,KAD0D;AAElEU,MAAAA,WAAW,EAAE;AAFqD,KAA5C,CAAvB;AAIA,WAAO,MAAMf,GAAG,CAACW,IAAJ,EAAb;AACA,GAND,CAME,OAAOC,GAAP,EAAY;AACbK,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA;AACD,CAVM;AAYP,OAAO,MAAMO,OAAO,GAAG,YAAY;AAClC,MAAI;AACH,UAAMnB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,OAAlC,EAA0C;AAChEC,MAAAA,MAAM,EAAE,KADwD;AAEhEU,MAAAA,WAAW,EAAE;AAFmD,KAA1C,CAAvB;AAIA,WAAO,MAAMf,GAAG,CAACW,IAAJ,EAAb;AACA,GAND,CAME,OAAOC,GAAP,EAAY;AACb,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACA;AACD,CAVM","sourcesContent":["export const register = async ({ username, email, password } = {}) => {\r\n\tconst user = { username, email, password };\r\n\r\n\ttry {\r\n\t\tconst res = await fetch(`${process.env.REACT_APP_API_URL}/register`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(user),\r\n\t\t});\r\n\r\n\t\treturn await res.json();\r\n\t} catch (err) {\r\n\t\tthrow new Error(`Cannot register at this time. ${err}`);\r\n\t}\r\n};\r\n\r\nexport const login = async ({ email, password } = {}) => {\r\n\tconst user = { email, password };\r\n\r\n\ttry {\r\n\t\tconst res = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tcredentials: \"include\",\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(user),\r\n\t\t});\r\n     \r\n\t\treturn await res.json();\r\n\t} catch (err) {\r\n\t\tthrow new Error(`Cannot login at this time. ${err}`);\r\n\t}\r\n};\r\n\r\nexport const logout = async () => {\r\n\ttry {\r\n\t\tconst res = await fetch(`${process.env.REACT_APP_API_URL}/logout`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\tcredentials: \"include\",\r\n\t\t});\r\n\t\treturn await res.json();\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nexport const getUser = async () => {\r\n\ttry {\r\n\t\tconst res = await fetch(`${process.env.REACT_APP_API_URL}/user`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\tcredentials: \"include\",\r\n\t\t});\r\n\t\treturn await res.json();\r\n\t} catch (err) {\r\n\t\tthrow new Error(\"Please login to continue\");\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}